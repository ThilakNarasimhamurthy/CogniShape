version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: neuronest_db
    environment:
      POSTGRES_DB: neuronest
      POSTGRES_USER: neuronest_user
      POSTGRES_PASSWORD: neuronest_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - neuronest_network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: neuronest_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - neuronest_network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: neuronest_backend
    environment:
      - DATABASE_URL=postgresql://neuronest_user:neuronest_password@postgres:5432/neuronest
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SECRET_KEY=development-secret-key-change-in-production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - RAZORPAY_KEY_ID=${RAZORPAY_KEY_ID}
      - RAZORPAY_KEY_SECRET=${RAZORPAY_KEY_SECRET}
      - DEBUG=True
      - HOST=0.0.0.0
      - PORT=8000
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - neuronest_network
    restart: unless-stopped
    volumes:
      - ./backend:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: neuronest_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000
      - REACT_APP_BACKEND_URL=http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - neuronest_network
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm start

  # Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: neuronest_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/ssl/certs
    depends_on:
      - frontend
      - backend
    networks:
      - neuronest_network
    restart: unless-stopped
    profiles:
      - production

networks:
  neuronest_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local